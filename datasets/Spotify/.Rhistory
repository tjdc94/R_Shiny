<- c(0,2,5.3,6,-2,4)
c(0,2,5.3,6,-2,4)
c(0,2,5.3,6,-2,4)
<- c(0,2,5)
= c(0,2,5)
'Height' = c(156,180,185,175,160,165,190,170,165,173)
'Weight' = c(60,65,58,70,80,55,90,85,66,65)
'Gender' = c(Female,Female,Male,Female,Male,Female,Male,Female, Male,Female, Male)
'Gender' = c('Female','Female','Male','Female','Male','Female','Male','Female','Male','Female','Male')
factor(Gender)
mydataframe = data.frame(Height,Weight,Gender)
'Height' = c(156,180,185,175,160,165,190,170,165,173)
> 'Weight' = c(60,65,58,70,80,55,90,85,66,65)
> 'Gender' = c(Female,Male,Female,Male,Female,Male,Female, Male,Female, Male)
'Gender' = c(Female,Male,Female,Male,Female,Male,Female, Male,Female, Male)
Gender = c('Female','Male','Female','Male','Female','Male','Female','Male','Female','Male')
factor(Gender)
mydataframe = data.frame(Height,Weight,Gender)
qplot(Height,Weight,data=pf)
ggplot(aes(x=age,y=friend_count),data=pf)+
geom_point()
R
library(ggplot2) # ggplot Library
library(plotly) # plotly for further interactivity
N <- 1000 # To be changed via the inputId: noOfSamples
mu <- 0 # To be changed via the inputId: mu
sigma <- 1 # To be changed via the inputId: sigma
noOfBins <- 20 # To be changed via the inputId: noOfBins
x <- rnorm(N, mean=mu, sd=sigma) # Create samples
Nsamples <- as.data.frame(x) # Make a dataframe for ggplot
binBreak <- seq(min(Nsamples$x), max(Nsamples$x), length.out = noOfBins)
# Create bins for histogram
p <- ggplot(data=Nsamples, aes(x=x)) + # Specify data and x axis
geom_histogram(# Specify histogram for ggplot
breaks=binBreak, # Specify bins
alpha=.5, color="light blue", fill="red") +
# Design colours for histogram
xlim(-20,20)+ # Set x limits
labs(title="Histogram of Samples") # Add title
ggplotly(p) # Create plotly interactive object
R
library("tidyverse")
install.packages("visNetwork")
library("rfigshare")
library("tidyverse")
## See https://doi.org/10.6084/m9.figshare.3761562 for details
deposit_details <- fs_details(3761562)
usethis::edit_r_environ()
usethis::edit_r_environ()
install.packages("usethis")
usethis::edit_r_environ()
Sys.getenv("RFIGSHARE_PAT")
remotes::install_github("https://github.com/ropensci/rfigshare/tree/sckott")
install.packages("remotes")
remotes::install_github("https://github.com/ropensci/rfigshare/tree/sckott")
fs_browse()
library(rfigshare)
fs_browse()
library("rfigshare")
library("tidyverse")
## See https://doi.org/10.6084/m9.figshare.3761562 for details
deposit_details <- fs_details(3761562)
deposit_files <- unlist(deposit_details$files)
deposit_files <-
data.frame(split(deposit_files, names(deposit_files)), stringsAsFactors = F)
function(input, output, session) {
output$deposited_files_table <- renderDT({
deposit_files %>%
datatable()
})
}
shiny::runApp('Documents/Personal Development/R/R Shiny - LinkedIn/Ex_Files_Data_Apps_R_Shiny/Exercise Files/05_04')
library(shiny)
library("shiny")
runApp('Documents/Personal Development/R/R_Mentoring')
setwd("/Users/tonye.cole/Documents/Personal Development/R/Spotify")
spotify <- read.csv("data.csv")
rm spotify
remove(spotify)
runApp('~/Documents/Personal Development/R/R_Mentoring')
setwd("/Users/tonye.cole/Documents/Personal Development/R/Spotify")
spotify <- as.data.frame(read.csv("data.csv"))
View(spotify)
head(spotify)
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
head(spotify)
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
?seq()
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
head(spotify$acousticness)
top(spotify$acousticness)
spotify$acousticness
runApp('~/Documents/Personal Development/R/R_Mentoring')
library("tidyverse")
x <- spotify$acousticness %>%
filter (input == acousticness)
# Global variables can go here
setwd("/Users/tonye.cole/Documents/Personal Development/R/Spotify")
spotify <- as.data.frame(read.csv("data.csv"))
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
input$danceability
runApp('~/Documents/Personal Development/R/R_Mentoring')
summary(spotify)
str(spotify)
runApp('~/Documents/Personal Development/R/R_Mentoring')
spotify$acousticness
x <- spotify %>%
filter (input$d == as.double(danceability))
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
?hist
runApp('~/Documents/Personal Development/R/R_Mentoring')
c("a"="hello", b="bye")
c("a"="hello", "b"="bye")
x <- names(spotify)
x
names(x) <- x
x
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
runApp('~/Documents/Personal Development/R/R_Mentoring')
